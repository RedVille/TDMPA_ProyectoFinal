// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.vampi.vampiappa.domain.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class UsuarioJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Usuario>() {
  private val options: JsonReader.Options = JsonReader.Options.of("matricula", "nombre",
      "apPaterno", "apMaterno", "correo", "contrasena", "foto", "tipo")

  private val intAdapter: JsonAdapter<Int> = moshi.adapter(Int::class.java, emptySet(), "matricula")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "nombre")

  @Volatile
  private var constructorRef: Constructor<Usuario>? = null

  public override fun toString(): String = buildString(29) {
      append("GeneratedJsonAdapter(").append("Usuario").append(')') }

  public override fun fromJson(reader: JsonReader): Usuario {
    var matricula: Int? = 0
    var nombre: String? = null
    var apPaterno: String? = null
    var apMaterno: String? = null
    var correo: String? = null
    var contrasena: String? = null
    var foto: String? = null
    var tipo: String? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          matricula = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("matricula",
              "matricula", reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          nombre = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("nombre", "nombre",
              reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          apPaterno = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("apPaterno",
              "apPaterno", reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          apMaterno = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("apMaterno",
              "apMaterno", reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          correo = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("correo", "correo",
              reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          contrasena = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("contrasena",
              "contrasena", reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        6 -> {
          foto = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("foto", "foto", reader)
          // $mask = $mask and (1 shl 6).inv()
          mask0 = mask0 and 0xffffffbf.toInt()
        }
        7 -> {
          tipo = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("tipo", "tipo", reader)
          // $mask = $mask and (1 shl 7).inv()
          mask0 = mask0 and 0xffffff7f.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xffffff00.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  Usuario(
          matricula = matricula as Int,
          nombre = nombre as String,
          apPaterno = apPaterno as String,
          apMaterno = apMaterno as String,
          correo = correo as String,
          contrasena = contrasena as String,
          foto = foto as String,
          tipo = tipo as String
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<Usuario> = this.constructorRef ?:
          Usuario::class.java.getDeclaredConstructor(Int::class.javaPrimitiveType,
          String::class.java, String::class.java, String::class.java, String::class.java,
          String::class.java, String::class.java, String::class.java, Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
      return localConstructor.newInstance(
          matricula,
          nombre,
          apPaterno,
          apMaterno,
          correo,
          contrasena,
          foto,
          tipo,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: Usuario?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("matricula")
    intAdapter.toJson(writer, value_.matricula)
    writer.name("nombre")
    stringAdapter.toJson(writer, value_.nombre)
    writer.name("apPaterno")
    stringAdapter.toJson(writer, value_.apPaterno)
    writer.name("apMaterno")
    stringAdapter.toJson(writer, value_.apMaterno)
    writer.name("correo")
    stringAdapter.toJson(writer, value_.correo)
    writer.name("contrasena")
    stringAdapter.toJson(writer, value_.contrasena)
    writer.name("foto")
    stringAdapter.toJson(writer, value_.foto)
    writer.name("tipo")
    stringAdapter.toJson(writer, value_.tipo)
    writer.endObject()
  }
}
